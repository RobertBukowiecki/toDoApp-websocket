{"ast":null,"code":"var _jsxFileName = \"/Users/robert/kodilla/to-do-app/client/src/App.js\";\nimport React from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      taskName: \"\"\n    };\n  }\n\n  removeTask(taskId, local) {\n    this.setState({\n      tasks: this.state.tasks.filter(task => taskId.id !== task.id)\n    });\n    return local === true && this.socket.emit(\"removeTask\", taskId);\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    const task = {\n      taskName: this.state.taskName,\n      id: uuidv4()\n    };\n    this.addTask(task);\n    this.socket.emit(\"addTask\", task);\n    this.setState({\n      taskName: \"\"\n    });\n  }\n\n  addTask(task) {\n    this.setState({\n      tasks: [...this.state.tasks, task]\n    });\n  }\n\n  componentDidMount() {\n    this.socket = io();\n    this.socket.connect(\"localhost:3000\");\n  }\n\n  render() {\n    const {\n      tasks,\n      taskName\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDoList.app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tasks-section\",\n        id: \"tasks-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tasks-section__list\",\n          id: \"tasks-list\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"task\",\n            children: [task.taskName, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.removeTask(task, true),\n              className: \"btn btn--red\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"add-task-form\",\n          onSubmit: e => this.submitForm(e),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-input\",\n            autoComplete: \"off\",\n            type: \"text\",\n            placeholder: \"Type your description\",\n            id: \"task-name\",\n            onChange: e => this.setState({\n              taskName: e.target.value\n            }),\n            value: taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/robert/kodilla/to-do-app/client/src/App.js"],"names":["React","io","App","Component","state","tasks","taskName","removeTask","taskId","local","setState","filter","task","id","socket","emit","submitForm","e","preventDefault","uuidv4","addTask","componentDidMount","connect","render","map","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADwB;AAAA;;AAMhCC,EAAAA,UAAU,CAACC,MAAD,EAASC,KAAT,EAAgB;AACxB,SAAKC,QAAL,CAAc;AACZL,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBM,MAAjB,CAAyBC,IAAD,IAAUJ,MAAM,CAACK,EAAP,KAAcD,IAAI,CAACC,EAArD;AADK,KAAd;AAIA,WAAOJ,KAAK,KAAK,IAAV,IAAkB,KAAKK,MAAL,CAAYC,IAAZ,CAAiB,YAAjB,EAA+BP,MAA/B,CAAzB;AACD;;AAEDQ,EAAAA,UAAU,CAACC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMN,IAAI,GAAG;AAAEN,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAAvB;AAAiCO,MAAAA,EAAE,EAAEM,MAAM;AAA3C,KAAb;AAEA,SAAKC,OAAL,CAAaR,IAAb;AACA,SAAKE,MAAL,CAAYC,IAAZ,CAAiB,SAAjB,EAA4BH,IAA5B;AACA,SAAKF,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD;;AAEDc,EAAAA,OAAO,CAACR,IAAD,EAAO;AACZ,SAAKF,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBO,IAAtB;AAAT,KAAd;AACD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,MAAL,GAAcb,EAAE,EAAhB;AACA,SAAKa,MAAL,CAAYQ,OAAZ,CAAoB,gBAApB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKF,KAAjC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAS,QAAA,SAAS,EAAC,eAAnB;AAAmC,QAAA,EAAE,EAAC,eAAtC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAoC,UAAA,EAAE,EAAC,YAAvC;AAAA,oBACGC,KAAK,CAACmB,GAAN,CAAWZ,IAAD,iBACT;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,uBACGA,IAAI,CAACN,QADR,eAEE;AACE,cAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,CAAgBK,IAAhB,EAAsB,IAAtB,CADjB;AAEE,cAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAA0BA,IAAI,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF,eAiBE;AAAM,UAAA,EAAE,EAAC,eAAT;AAAyB,UAAA,QAAQ,EAAGI,CAAD,IAAO,KAAKD,UAAL,CAAgBC,CAAhB,CAA1C;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,YADZ;AAEE,YAAA,YAAY,EAAC,KAFf;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,WAAW,EAAC,uBAJd;AAKE,YAAA,EAAE,EAAC,WALL;AAME,YAAA,QAAQ,EAAGA,CAAD,IAAO,KAAKP,QAAL,CAAc;AAAEJ,cAAAA,QAAQ,EAAEW,CAAC,CAACQ,MAAF,CAASC;AAArB,aAAd,CANnB;AAOE,YAAA,KAAK,EAAEpB;AAPT;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAwB,YAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AA1E+B;;AA6ElC,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\nimport io from \"socket.io-client\";\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n    taskName: \"\",\n  };\n\n  removeTask(taskId, local) {\n    this.setState({\n      tasks: this.state.tasks.filter((task) => taskId.id !== task.id),\n    });\n\n    return local === true && this.socket.emit(\"removeTask\", taskId);\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n\n    const task = { taskName: this.state.taskName, id: uuidv4() };\n\n    this.addTask(task);\n    this.socket.emit(\"addTask\", task);\n    this.setState({ taskName: \"\" });\n  }\n\n  addTask(task) {\n    this.setState({ tasks: [...this.state.tasks, task] });\n  }\n\n  componentDidMount() {\n    this.socket = io();\n    this.socket.connect(\"localhost:3000\");\n  }\n  render() {\n    const { tasks, taskName } = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>ToDoList.app</h1>\n        </header>\n\n        <section className=\"tasks-section\" id=\"tasks-section\">\n          <h2>Tasks</h2>\n\n          <ul className=\"tasks-section__list\" id=\"tasks-list\">\n            {tasks.map((task) => (\n              <li className=\"task\" key={task.id}>\n                {task.taskName}\n                <button\n                  onClick={() => this.removeTask(task, true)}\n                  className=\"btn btn--red\"\n                >\n                  Remove\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          <form id=\"add-task-form\" onSubmit={(e) => this.submitForm(e)}>\n            <input\n              className=\"text-input\"\n              autoComplete=\"off\"\n              type=\"text\"\n              placeholder=\"Type your description\"\n              id=\"task-name\"\n              onChange={(e) => this.setState({ taskName: e.target.value })}\n              value={taskName}\n            />\n            <button className=\"btn\" type=\"submit\">\n              Add\n            </button>\n          </form>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}